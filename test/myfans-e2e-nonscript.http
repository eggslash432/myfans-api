### ========== 変数 ==========
@host = http://localhost:3001
@json = application/json

# 認証用
@email = user2@example.com
@pass  = testtest
@role  = fan            

@token =  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMzlmZTViOC05ZGI5LTQ5OGYtOWQyZS1lNTRiYzdkNzAzZGYiLCJlbWFpbCI6InVzZXIyQGV4YW1wbGUuY29tIiwicm9sZSI6ImNyZWF0b3IiLCJpYXQiOjE3NjA0OTYzNjgsImV4cCI6MTc2MDQ5OTk2OH0.H8zx3BzNZsCJnWu6ClsIcGk-DMKXfvoU8cqIDbGRcOY

@email_creator = creator1@example.com
@pass_creator  = testtest
@role_creator  = creator

@token_creator = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkOTBiNDA0Zi0wYzk1LTQ5ZjEtODNhYy1hNTFhMTk4NDEzYzMiLCJlbWFpbCI6ImNyZWF0b3IxQGV4YW1wbGUuY29tIiwicm9sZSI6ImNyZWF0b3IiLCJpYXQiOjE3NjA0OTM5NjgsImV4cCI6MTc2MDQ5NzU2OH0.S3Is8TSsxYy-INnth5drBY25Gbz5c5qQ_yRC6B_GbYE
@creatorId =  d90b404f-0c95-49f1-83ac-a51a198413c3

@ppvPostId =  1d5db5ae-d3ce-47bc-8988-71cb09713d4c
# Stripe Webhook は /payments/webhook
### =========================


### 1) 閲覧用ユーザーのサインアップ（※ role 必須）
POST {{host}}/auth/signup
Content-Type: {{json}}

{
  "email": "{{email}}",
  "password": "{{pass}}",
  "role": "{{role}}"
}

### 1) クリエイター用ユーザーのサインアップ（※ role 必須）
POST {{host}}/auth/signup
Content-Type: {{json}}

{
  "email": "{{email_creator}}",
  "password": "{{pass_creator}}",
  "role": "{{role_creator}}"
}

### 2) 閲覧用ユーザーのログイン（accessToken を @token にコピペ）
POST {{host}}/auth/login
Content-Type: {{json}}

{
  "email": "{{email}}",
  "password": "{{pass}}"
}

### 2) 投稿用ユーザーのログイン
POST {{host}}/auth/login
Content-Type: {{json}}

{
  "email": "{{email_creator}}",
  "password": "{{pass_creator}}"
}

### 3) クリエイター登録（publicName or displayName のどちらか必須）
POST {{host}}/creators
Authorization: Bearer {{token_creator}}
Content-Type: {{json}}

{
  "publicName": "クリエイター次郎",
  "displayName": "TaroCreator",
  "bio": "自己紹介"
}
# レスポンスに id が返れば @creatorId に貼る（無くても次へ進める）


### 4) プラン作成（CreatePlanDto: priceJpy のみ）
# A) creatorId が不要な実装（このコードは userId→creator を内部解決）
POST {{host}}/plans
Authorization: Bearer {{token_creator}}
Content-Type: {{json}}

{
  "name": "月額1980円プラン",
  "priceJpy": 1980
}

### B) もし A で 400（creator 周り）になるなら、creatorId を付けて試す（実装依存）
# POST {{host}}/plans
# Authorization: Bearer {{token}}
# Content-Type: {{json}}
#
# {
#   "creatorId": "{{creatorId}}",
#   "name": "月額980円プラン",
#   "priceJpy": 980
# }


### 5) プラン一覧（自分のプラン）
GET {{host}}/plans
Authorization: Bearer {{token_creator}}

###
# 2️⃣ 閲覧用ユーザー情報を取得（JWT確認）
GET {{host}}/auth/me
Authorization: Bearer {{token}}
Content-Type: application/json

###
# 2️⃣ クリエイターユーザー情報を取得（JWT確認）
GET {{host}}/auth/me
Authorization: Bearer {{token_creator}}
Content-Type: application/json

### 6) PPV投稿の閲覧（作成APIは未実装のため、seed 等で id がある前提）
# 未購入時は 403、解放後は 200
GET {{host}}/posts/{{ppvPostId}}
Authorization: Bearer {{token}}

### PPV購入状態の検証（購入済みユーザーなら 200）
GET {{host}}/posts/{{ppvPostId}}
Authorization: Bearer {{token}} 
Content-Type: application/json

